<?php

// $Id: audio_import.module,v 1.5.2.2 2008/05/14 03:52:20 drewish Exp $

function audio_import_help($section = '') {
  switch ($section) {
    case 'admin/content/audio_import':
      $output = '<p>'. t("Import multiple audio files and save them as audio nodes. The files will be moved from their location into the audio module's files directory. ")
        . t("Searching for files ending with %extensions in %dirpath directory.", array('%dirpath' => realpath(variable_get('audio_import_path', '')), '%extensions' => variable_get('audio_allowed_extensions', 'mp3 wav ogg'))) .'</p>';
      return $output;
    case 'admin/help#audio_import':
      $output  = '<p>'. t("The audio_import module allows users with 'administer audio' permission to import audio files and create audio nodes from them. ") .'</p>';
      return $output;
    case 'admin/settings/audio_import':
      return t("Configure the audio import module's settings.");
    default:
      return null;
  }
}

function audio_import_menu($may_cache) {
  $items = array();
  if ($may_cache) {
    $items[] = array(
      'path' => 'admin/content/audio_import',
      'title' => t('Audio import'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('audio_import_form'),
      'access' => user_access('administer audio'),
      'type' => MENU_NORMAL_ITEM,
      'description' => t('Import audio from the filesystem.')
    );
    $items[] = array(
      'path' => 'admin/settings/audio_import',
      'title' => t('Audio import settings'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('audio_import_admin_settings'),
      'access' => user_access('administer site configuration'),
      'type' => MENU_NORMAL_ITEM,
      'description' => t('Change settings for the Audio Import module.')
    );
  }

  return $items;
}

function audio_import_form() {
  $dirpath = variable_get('audio_import_path', '');

  if (!file_check_directory($dirpath)) {
    drupal_set_message(t("You need to configure the import directory on the audio import module's <a href='!admin-settings-audio_import'>settings page</a>.", array('!admin-settings-audio_import' => url('admin/settings/audio_import'))), 'error');
    return array();
  }

  // convert the extensions setting into a regex for file scanning
  $extensions = variable_get('audio_allowed_extensions', 'mp3 wav ogg');
  $extensions = preg_split('/[\s,]+/', $extensions, -1, PREG_SPLIT_NO_EMPTY);
  $filemask = '.*(\.'. implode('|\.', $extensions).')$';

  $options = array();
  $files = file_scan_directory($dirpath, $filemask);
  ksort($files);
  $i = 1;
  foreach ($files as $file) {
    // remove our base path from the filename but keep any sub-directories
    $options[$i++] = substr($file->filename, strlen($dirpath) + 1);
  }

  if ($options) {
    // put a copy of the list into a value so we can compare it to what they
    // submit and not have to worry about files being added or removed on the
    // filesystem.
    $form['file_list'] = array(
      '#type' => 'value',
      '#value' => $options
    );
    $form['audio_import_files'] = array(
      '#type' => 'checkboxes',
      '#options' => $options,
    );
    $form['buttons']['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Import')
    );
  }
  else {
    $form['audio_import_files'] = array(
      '#type' => 'item',
      '#value' => t('No files were found'),
    );
  }
  return $form;
}

function theme_audio_import_form($form) {
  $output = '';
  if (isset($form['audio_import_files']) && $form['audio_import_files']['#type'] == 'checkboxes') {
    $header = array(theme('table_select_header_cell'), t('Filename'));
    $rows = array();
    foreach (element_children($form['audio_import_files']) as $key) {
      $filename = $form['audio_import_files'][$key]['#title'];
      unset($form['audio_import_files'][$key]['#title']);
      $rows[] = array(
        drupal_render($form['audio_import_files'][$key]),
        $filename,
      );
    }
    $output .= theme('table', $header, $rows);
  }
  return $output . drupal_render($form);
}

function audio_import_form_submit($form_id, $form_values) {
  $op = isset($form_values['op']) ? $form_values['op'] : '';
  if ($op == t('Import')) {
    $dirpath = variable_get('audio_import_path', '');
    if (file_check_directory($dirpath)) {
      $nodes = array();
      $files = array();
      foreach (array_filter($form_values['audio_import_files']) as $index) {
        // try to avoid php's script timeout with a bunch of large files or
        // a slow machine
        set_time_limit(0);

        $origname = $form_values['file_list'][$index];
        $filename = file_check_location($dirpath .'/'. $origname, $dirpath);
        if ($filename) {
          $node = audio_api_insert($filename);
          if ($node) {
            $nodes[] = t('%filename as <a href="!node-link">@node-title</a> <a href="!edit-link">[edit]</a>', array(
              '%filename' => $origname,
              '!node-link' => url('node/'. $node->nid),
              '@node-title' => $node->title,
              '!edit-link' => url('node/'. $node->nid .'/edit'),
            ));
          }
          else {
            drupal_set_message(t('Error importing %filename.', array('%filename' => $filename)));
          }
        }
      }

      // report back on our progress
      if (count($nodes)) {
        drupal_set_message(t("Successfully imported: ". theme('item_list', $nodes)));
      }
      else {
        drupal_set_message(t('No audio files were imported.'));
      }
    }
  }
}

function audio_import_admin_settings() {
  $form['audio_import_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Import path'),
    '#default_value' => variable_get('audio_import_path', file_directory_temp() . '/audio/'),
    '#after_build' => array('_audio_import_settings_check_directory'),
    '#description' => t("The directory to import audio nodes from. Drupal will need to have write access to this directory so we can move the file.") .'<br />'
      . t("<strong>Note:</strong> a path begining with a <kbd>/</kbd> indicates the path is relative to the server's root, one starting without specifies a path relative to Drupal's root. I.e. <kbd>/tmp/audio</kbd> would be the temp directory off the root while <kbd>tmp/audio</kbd> would be inside Drupal's directory."),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}

/**
 * Checks the existence of the directory specified in $form_element.
 *
 * @param $form_element
 *   The form element containing the name of the directory to check.
 * @see system_check_directory()
 */
function _audio_import_settings_check_directory($form_element) {
  $importDir = $form_element['#value'];
  file_check_directory($importDir, 0, $form_element['#parents'][0]);
  $audioDir = variable_get('audio_file_path', file_directory_path() .'/audio');
  if (realpath($importDir) == realpath($audioDir)) {
    form_set_error($form_element['#parents'][0], t("You can't import from the audio module's directory. The import deletes the original files so you would just be asking for trouble."));
  }
  return $form_element;
}
